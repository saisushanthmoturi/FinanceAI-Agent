import React, { useState } from 'react';
import {
  Container,
  Grid,
  Card,
  CardContent,
  Typography,
  Box,
  Button,
  TextField,
  Alert,
  LinearProgress,
  List,
  ListItem,
  ListItemText,
  ListItemIcon,
  Divider,
  Paper,
  Stack,
  Avatar,
} from '@mui/material';
import {
  TrendingUp,
  AccountBalance,
  Savings,
  School,
  Work,
  CheckCircle,
  Info,
  Lightbulb,
  Language,
  Phone,
  Message,
} from '@mui/icons-material';
import { useAppStore } from '../store/useAppStore';

// Financial Inclusion Component for Gig Workers, Freelancers, and Rural Users
const FinancialInclusion: React.FC = () => {
  const { language } = useAppStore();
  const [monthlyIncome, setMonthlyIncome] = useState('');
  const [savingsGoal, setSavingsGoal] = useState('');
  const [showRecommendations, setShowRecommendations] = useState(false);

  // Localized content
  const content = {
    en: {
      title: 'Financial Inclusion Center',
      subtitle: 'Tailored financial planning for gig workers, freelancers, and rural communities',
      incomeLabel: 'Average Monthly Income (‚Çπ)',
      goalLabel: 'Monthly Savings Goal (‚Çπ)',
      calculateBtn: 'Get Personalized Plan',
      features: 'Key Features',
      tips: 'Financial Tips',
      support: 'Support Options',
    },
    hi: {
      title: '‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§Æ‡§æ‡§µ‡•á‡§∂ ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞',
      subtitle: '‡§ó‡§ø‡§ó ‡§µ‡§∞‡•ç‡§ï‡§∞‡•ç‡§∏, ‡§´‡•ç‡§∞‡•Ä‡§≤‡§æ‡§Ç‡§∏‡§∞‡•ã‡§Ç ‡§î‡§∞ ‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§Ø‡•ã‡§ú‡§®‡§æ',
      incomeLabel: '‡§î‡§∏‡§§ ‡§Æ‡§æ‡§∏‡§ø‡§ï ‡§Ü‡§Ø (‚Çπ)',
      goalLabel: '‡§Æ‡§æ‡§∏‡§ø‡§ï ‡§¨‡§ö‡§§ ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø (‚Çπ)',
      calculateBtn: '‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç',
      features: '‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç',
      tips: '‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡•Å‡§ù‡§æ‡§µ',
      support: '‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™',
    },
    te: {
      title: '‡∞Ü‡∞∞‡±ç‡∞•‡∞ø‡∞ï ‡∞ö‡±á‡∞∞‡∞ø‡∞ï ‡∞ï‡±á‡∞Ç‡∞¶‡±ç‡∞∞‡∞Ç',
      subtitle: '‡∞ó‡∞ø‡∞ó‡±ç ‡∞µ‡∞∞‡±ç‡∞ï‡∞∞‡±ç‡∞≤‡±Å, ‡∞´‡±ç‡∞∞‡±Ä‡∞≤‡∞æ‡∞®‡±ç‡∞∏‡∞∞‡±ç‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ó‡±ç‡∞∞‡∞æ‡∞Æ‡±Ä‡∞£ ‡∞ï‡∞Æ‡±ç‡∞Ø‡±Ç‡∞®‡∞ø‡∞ü‡±Ä‡∞≤ ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞Ü‡∞∞‡±ç‡∞•‡∞ø‡∞ï ‡∞™‡±ç‡∞∞‡∞£‡∞æ‡∞≥‡∞ø‡∞ï',
      incomeLabel: '‡∞∏‡∞ó‡∞ü‡±Å ‡∞®‡±Ü‡∞≤‡∞µ‡∞æ‡∞∞‡±Ä ‡∞Ü‡∞¶‡∞æ‡∞Ø‡∞Ç (‚Çπ)',
      goalLabel: '‡∞®‡±Ü‡∞≤‡∞µ‡∞æ‡∞∞‡±Ä ‡∞™‡±ä‡∞¶‡±Å‡∞™‡±Å ‡∞≤‡∞ï‡±ç‡∞∑‡±ç‡∞Ø‡∞Ç (‚Çπ)',
      calculateBtn: '‡∞µ‡±ç‡∞Ø‡∞ï‡±ç‡∞§‡∞ø‡∞ó‡∞§ ‡∞™‡±ç‡∞≤‡∞æ‡∞®‡±ç ‡∞™‡±ä‡∞Ç‡∞¶‡∞Ç‡∞°‡∞ø',
      features: '‡∞Æ‡±Å‡∞ñ‡±ç‡∞Ø ‡∞≤‡∞ï‡±ç‡∞∑‡∞£‡∞æ‡∞≤‡±Å',
      tips: '‡∞Ü‡∞∞‡±ç‡∞•‡∞ø‡∞ï ‡∞ö‡∞ø‡∞ü‡±ç‡∞ï‡∞æ‡∞≤‡±Å',
      support: '‡∞Æ‡∞¶‡±ç‡∞¶‡∞§‡±Å ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï‡∞≤‡±Å',
    },
    ta: {
      title: '‡Æ®‡Æø‡Æ§‡Æø ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æü‡Æï‡Øç‡Æï ‡ÆÆ‡Øà‡ÆØ‡ÆÆ‡Øç',
      subtitle: '‡Æï‡Æø‡Æï‡Øç ‡Æ§‡Øä‡Æ¥‡Æø‡Æ≤‡Ææ‡Æ≥‡Æ∞‡Øç‡Æï‡Æ≥‡Øç, ‡ÆÉ‡Æ™‡Øç‡Æ∞‡ØÄ‡Æ≤‡Ææ‡Æ©‡Øç‡Æö‡Æ∞‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æï‡Æø‡Æ∞‡Ææ‡ÆÆ‡Æ™‡Øç‡Æ™‡ØÅ‡Æ± ‡Æö‡ÆÆ‡ØÇ‡Æï‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡Ææ‡Æ© ‡Æ®‡Æø‡Æ§‡Æø ‡Æ§‡Æø‡Æü‡Øç‡Æü‡ÆÆ‡Æø‡Æü‡Æ≤‡Øç',
      incomeLabel: '‡Æö‡Æ∞‡Ææ‡Æö‡Æ∞‡Æø ‡ÆÆ‡Ææ‡Æ§‡Ææ‡Æ®‡Øç‡Æ§‡Æø‡Æ∞ ‡Æµ‡Æ∞‡ØÅ‡ÆÆ‡Ææ‡Æ©‡ÆÆ‡Øç (‚Çπ)',
      goalLabel: '‡ÆÆ‡Ææ‡Æ§‡Ææ‡Æ®‡Øç‡Æ§‡Æø‡Æ∞ ‡Æö‡Øá‡ÆÆ‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡Æá‡Æ≤‡Æï‡Øç‡Æï‡ØÅ (‚Çπ)',
      calculateBtn: '‡Æ§‡Æ©‡Æø‡Æ™‡Øç‡Æ™‡ÆØ‡Æ©‡Øç ‡Æ§‡Æø‡Æü‡Øç‡Æü‡Æ§‡Øç‡Æ§‡Øà‡Æ™‡Øç ‡Æ™‡ØÜ‡Æ±‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç',
      features: '‡ÆÆ‡ØÅ‡Æï‡Øç‡Æï‡Æø‡ÆØ ‡ÆÖ‡ÆÆ‡Øç‡Æö‡Æô‡Øç‡Æï‡Æ≥‡Øç',
      tips: '‡Æ®‡Æø‡Æ§‡Æø ‡ÆÜ‡Æ≤‡Øã‡Æö‡Æ©‡Øà‡Æï‡Æ≥‡Øç',
      support: '‡ÆÜ‡Æ§‡Æ∞‡Æµ‡ØÅ ‡Æµ‡Æø‡Æ∞‡ØÅ‡Æ™‡Øç‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Øç',
    },
    ml: {
      title: '‡¥∏‡¥æ‡¥Æ‡µç‡¥™‡¥§‡µç‡¥§‡¥ø‡¥ï ‡¥â‡µæ‡¥™‡µç‡¥™‡µÜ‡¥ü‡µÅ‡¥§‡µç‡¥§‡µΩ ‡¥ï‡µá‡¥®‡µç‡¥¶‡µç‡¥∞‡¥Ç',
      subtitle: '‡¥ó‡¥ø‡¥ó‡µç ‡¥§‡µä‡¥¥‡¥ø‡¥≤‡¥æ‡¥≥‡¥ø‡¥ï‡µæ, ‡¥´‡µç‡¥∞‡µÄ‡¥≤‡¥æ‡µª‡¥∏‡µº‡¥Æ‡¥æ‡µº, ‡¥ó‡µç‡¥∞‡¥æ‡¥Æ‡µÄ‡¥£ ‡¥∏‡¥Æ‡µÇ‡¥π‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µÅ‡¥≥‡µç‡¥≥ ‡¥∏‡¥æ‡¥Æ‡µç‡¥™‡¥§‡µç‡¥§‡¥ø‡¥ï ‡¥Ü‡¥∏‡µÇ‡¥§‡µç‡¥∞‡¥£‡¥Ç',
      incomeLabel: '‡¥∂‡¥∞‡¥æ‡¥∂‡¥∞‡¥ø ‡¥™‡µç‡¥∞‡¥§‡¥ø‡¥Æ‡¥æ‡¥∏ ‡¥µ‡¥∞‡µÅ‡¥Æ‡¥æ‡¥®‡¥Ç (‚Çπ)',
      goalLabel: '‡¥™‡µç‡¥∞‡¥§‡¥ø‡¥Æ‡¥æ‡¥∏ ‡¥∏‡µá‡¥µ‡¥ø‡¥Ç‡¥ó‡µç‡¥∏‡µç ‡¥≤‡¥ï‡µç‡§∑‡µç‡¥Ø‡¥Ç (‚Çπ)',
      calculateBtn: '‡¥µ‡µç‡¥Ø‡¥ï‡µç‡¥§‡¥ø‡¥ó‡¥§ ‡¥™‡µç‡¥≤‡¥æ‡µª ‡¥®‡µá‡¥ü‡µÅ‡¥ï',
      features: '‡¥™‡µç‡¥∞‡¥ß‡¥æ‡¥® ‡¥∏‡¥µ‡¥ø‡¥∂‡µá‡¥∑‡¥§‡¥ï‡µæ',
      tips: '‡¥∏‡¥æ‡¥Æ‡µç‡¥™‡¥§‡µç‡¥§‡¥ø‡¥ï ‡¥®‡µÅ‡¥±‡µÅ‡¥ô‡µç‡¥ô‡µÅ‡¥ï‡µæ',
      support: '‡¥™‡¥ø‡¥®‡µç‡¥§‡µÅ‡¥£ ‡¥ì‡¥™‡µç‡¥∑‡¥®‡µÅ‡¥ï‡µæ',
    },
  };

  const t = content[language as keyof typeof content] || content.en;

  const handleCalculate = () => {
    setShowRecommendations(true);
  };

  // Calculate savings rate
  const income = parseFloat(monthlyIncome) || 0;
  const goal = parseFloat(savingsGoal) || 0;
  const savingsRate = income > 0 ? (goal / income) * 100 : 0;
  const emergencyFund = income * 3; // 3 months emergency fund

  const features = [
    {
      icon: <Work />,
      title: language === 'en' ? 'Irregular Income Management' : '‡§Ö‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§Ü‡§Ø ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®',
      description: language === 'en' 
        ? 'Smart budgeting for variable income streams'
        : '‡§™‡§∞‡§ø‡§µ‡§∞‡•ç‡§§‡§®‡§∂‡•Ä‡§≤ ‡§Ü‡§Ø ‡§ß‡§æ‡§∞‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§¨‡§ú‡§ü',
    },
    {
      icon: <Savings />,
      title: language === 'en' ? 'Micro-Savings Plans' : '‡§∏‡•Ç‡§ï‡•ç‡§∑‡•ç‡§Æ-‡§¨‡§ö‡§§ ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç',
      description: language === 'en'
        ? 'Start saving with as little as ‚Çπ10/day'
        : '‚Çπ10/‡§¶‡§ø‡§® ‡§∏‡•á ‡§¨‡§ö‡§§ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç',
    },
    {
      icon: <AccountBalance />,
      title: language === 'en' ? 'No-Frills Banking' : '‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä ‡§¨‡•à‡§Ç‡§ï‡§ø‡§Ç‡§ó',
      description: language === 'en'
        ? 'Zero balance accounts with digital access'
        : '‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§™‡§π‡•Å‡§Ç‡§ö ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∂‡•Ç‡§®‡•ç‡§Ø ‡§¨‡•à‡§≤‡•á‡§Ç‡§∏ ‡§ñ‡§æ‡§§‡•á',
    },
    {
      icon: <School />,
      title: language === 'en' ? 'Financial Literacy' : '‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§æ‡§ï‡•ç‡§∑‡§∞‡§§‡§æ',
      description: language === 'en'
        ? 'Interactive lessons in your language'
        : '‡§Ü‡§™‡§ï‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§á‡§Ç‡§ü‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§µ ‡§™‡§æ‡§†',
    },
  ];

  const tips = [
    {
      title: language === 'en' ? '50-30-20 Rule (Modified)' : '50-30-20 ‡§®‡§ø‡§Ø‡§Æ (‡§∏‡§Ç‡§∂‡•ã‡§ß‡§ø‡§§)',
      description: language === 'en'
        ? '50% essentials, 30% irregular income buffer, 20% savings & debt'
        : '50% ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï, 30% ‡§Ö‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§Ü‡§Ø ‡§¨‡§´‡§∞, 20% ‡§¨‡§ö‡§§ ‡§î‡§∞ ‡§ã‡§£',
    },
    {
      title: language === 'en' ? 'Emergency Fund First' : '‡§™‡§π‡§≤‡•á ‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§®‡§ø‡§ß‡§ø',
      description: language === 'en'
        ? 'Build 3-6 months of expenses before investing'
        : '‡§®‡§ø‡§µ‡•á‡§∂ ‡§∏‡•á ‡§™‡§π‡§≤‡•á 3-6 ‡§Æ‡§π‡•Ä‡§®‡•á ‡§ï‡§æ ‡§ñ‡§∞‡•ç‡§ö ‡§¨‡§®‡§æ‡§è‡§Ç',
    },
    {
      title: language === 'en' ? 'Diversify Income' : '‡§Ü‡§Ø ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§µ‡§ø‡§ß‡§§‡§æ ‡§≤‡§æ‡§è‡§Ç',
      description: language === 'en'
        ? 'Multiple income streams reduce financial stress'
        : '‡§ï‡§à ‡§Ü‡§Ø ‡§∏‡•ç‡§∞‡•ã‡§§ ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§§‡§®‡§æ‡§µ ‡§ï‡§Æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç',
    },
    {
      title: language === 'en' ? 'Use Digital Payments' : '‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç',
      description: language === 'en'
        ? 'Track expenses automatically and get cashback'
        : '‡§ñ‡§∞‡•ç‡§ö ‡§∏‡•ç‡§µ‡§ö‡§æ‡§≤‡§ø‡§§ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§ï‡•à‡§∂‡§¨‡•à‡§ï ‡§™‡§æ‡§è‡§Ç',
    },
  ];

  const supportOptions = [
    {
      icon: <Phone />,
      title: language === 'en' ? 'Toll-Free Helpline' : '‡§ü‡•ã‡§≤-‡§´‡•ç‡§∞‡•Ä ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§®',
      value: '1800-XXX-XXXX',
      description: language === 'en' ? '24/7 Support in 12 languages' : '12 ‡§≠‡§æ‡§∑‡§æ‡§ì‡§Ç ‡§Æ‡•á‡§Ç 24/7 ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ',
    },
    {
      icon: <Message />,
      title: language === 'en' ? 'WhatsApp Banking' : '‡§µ‡•ç‡§π‡§æ‡§ü‡•ç‡§∏‡§è‡§™ ‡§¨‡•à‡§Ç‡§ï‡§ø‡§Ç‡§ó',
      value: '+91-XXXXX-XXXXX',
      description: language === 'en' ? 'Chat-based support' : '‡§ö‡•à‡§ü-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ',
    },
    {
      icon: <Language />,
      title: language === 'en' ? 'Local Language Support' : '‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§≠‡§æ‡§∑‡§æ ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ',
      value: 'Hindi, Telugu, Tamil, Malayalam & more',
      description: language === 'en' ? 'Voice and text assistance' : '‡§Ü‡§µ‡§æ‡§ú ‡§î‡§∞ ‡§™‡§æ‡§† ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ',
    },
  ];

  return (
    <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
      {/* Hero Section */}
      <Box sx={{ mb: 4, textAlign: 'center' }}>
        <Typography variant="h3" component="h1" gutterBottom fontWeight="bold">
          {t.title}
        </Typography>
        <Typography variant="h6" color="text.secondary" gutterBottom>
          {t.subtitle}
        </Typography>
      </Box>

      {/* Income Calculator Card */}
      <Card sx={{ mb: 4, background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' }}>
        <CardContent sx={{ p: 4 }}>
          <Typography variant="h5" color="white" gutterBottom fontWeight="bold">
            üí∞ {language === 'en' ? 'Income & Savings Calculator' : '‡§Ü‡§Ø ‡§î‡§∞ ‡§¨‡§ö‡§§ ‡§ï‡•à‡§≤‡§ï‡•Å‡§≤‡•á‡§ü‡§∞'}
          </Typography>
          <Grid container spacing={3} sx={{ mt: 1 }}>
            <Grid item xs={12} md={5}>
              <TextField
                fullWidth
                label={t.incomeLabel}
                type="number"
                value={monthlyIncome}
                onChange={(e) => setMonthlyIncome(e.target.value)}
                variant="filled"
                sx={{ bgcolor: 'white', borderRadius: 1 }}
              />
            </Grid>
            <Grid item xs={12} md={5}>
              <TextField
                fullWidth
                label={t.goalLabel}
                type="number"
                value={savingsGoal}
                onChange={(e) => setSavingsGoal(e.target.value)}
                variant="filled"
                sx={{ bgcolor: 'white', borderRadius: 1 }}
              />
            </Grid>
            <Grid item xs={12} md={2}>
              <Button
                fullWidth
                variant="contained"
                size="large"
                onClick={handleCalculate}
                sx={{ 
                  height: '56px',
                  bgcolor: 'white',
                  color: 'primary.main',
                  '&:hover': { bgcolor: 'grey.100' },
                }}
              >
                {t.calculateBtn}
              </Button>
            </Grid>
          </Grid>

          {showRecommendations && income > 0 && (
            <Box sx={{ mt: 3 }}>
              <Paper sx={{ p: 3, bgcolor: 'rgba(255,255,255,0.95)' }}>
                <Typography variant="h6" gutterBottom>
                  {language === 'en' ? 'üìä Your Financial Health' : 'üìä ‡§Ü‡§™‡§ï‡§æ ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø'}
                </Typography>
                <Grid container spacing={2}>
                  <Grid item xs={12} md={4}>
                    <Box>
                      <Typography variant="body2" color="text.secondary">
                        {language === 'en' ? 'Savings Rate' : '‡§¨‡§ö‡§§ ‡§¶‡§∞'}
                      </Typography>
                      <Typography variant="h4" color="primary" fontWeight="bold">
                        {savingsRate.toFixed(1)}%
                      </Typography>
                      <LinearProgress 
                        variant="determinate" 
                        value={Math.min(savingsRate, 100)} 
                        sx={{ mt: 1, height: 8, borderRadius: 4 }}
                      />
                    </Box>
                  </Grid>
                  <Grid item xs={12} md={4}>
                    <Box>
                      <Typography variant="body2" color="text.secondary">
                        {language === 'en' ? 'Emergency Fund Target' : '‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§®‡§ø‡§ß‡§ø ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø'}
                      </Typography>
                      <Typography variant="h5" fontWeight="bold">
                        ‚Çπ{emergencyFund.toLocaleString('en-IN')}
                      </Typography>
                      <Typography variant="caption" color="text.secondary">
                        {language === 'en' ? '(3 months expenses)' : '(3 ‡§Æ‡§π‡•Ä‡§®‡•á ‡§ï‡§æ ‡§ñ‡§∞‡•ç‡§ö)'}
                      </Typography>
                    </Box>
                  </Grid>
                  <Grid item xs={12} md={4}>
                    <Box>
                      <Typography variant="body2" color="text.secondary">
                        {language === 'en' ? 'Daily Savings Needed' : '‡§¶‡•à‡§®‡§ø‡§ï ‡§¨‡§ö‡§§ ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ'}
                      </Typography>
                      <Typography variant="h5" fontWeight="bold">
                        ‚Çπ{(goal / 30).toFixed(0)}
                      </Typography>
                      <Typography variant="caption" color="text.secondary">
                        {language === 'en' ? 'per day' : '‡§™‡•ç‡§∞‡§§‡§ø ‡§¶‡§ø‡§®'}
                      </Typography>
                    </Box>
                  </Grid>
                </Grid>

                {savingsRate < 20 && (
                  <Alert severity="warning" sx={{ mt: 2 }}>
                    {language === 'en'
                      ? '‚ö†Ô∏è Try to save at least 20% of your income for long-term financial security'
                      : '‚ö†Ô∏è ‡§¶‡•Ä‡§∞‡•ç‡§ò‡§ï‡§æ‡§≤‡§ø‡§ï ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§™‡§®‡•Ä ‡§Ü‡§Ø ‡§ï‡§æ ‡§ï‡§Æ ‡§∏‡•á ‡§ï‡§Æ 20% ‡§¨‡§ö‡§æ‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç'}
                  </Alert>
                )}
                {savingsRate >= 20 && (
                  <Alert severity="success" sx={{ mt: 2 }}>
                    {language === 'en'
                      ? '‚úÖ Excellent! You\'re on track to build a strong financial foundation'
                      : '‚úÖ ‡§â‡§§‡•ç‡§ï‡•É‡§∑‡•ç‡§ü! ‡§Ü‡§™ ‡§è‡§ï ‡§Æ‡§ú‡§¨‡•Ç‡§§ ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§®‡•Ä‡§Ç‡§µ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•Ä ‡§∞‡§æ‡§π ‡§™‡§∞ ‡§π‡•à‡§Ç'}
                  </Alert>
                )}
              </Paper>
            </Box>
          )}
        </CardContent>
      </Card>

      {/* Key Features */}
      <Box sx={{ mb: 4 }}>
        <Typography variant="h4" gutterBottom fontWeight="bold" sx={{ mb: 3 }}>
          {t.features}
        </Typography>
        <Grid container spacing={3}>
          {features.map((feature, index) => (
            <Grid item xs={12} sm={6} md={3} key={index}>
              <Card sx={{ height: '100%', transition: 'transform 0.2s', '&:hover': { transform: 'translateY(-4px)' } }}>
                <CardContent>
                  <Avatar sx={{ bgcolor: 'primary.main', mb: 2, width: 56, height: 56 }}>
                    {feature.icon}
                  </Avatar>
                  <Typography variant="h6" gutterBottom fontWeight="bold">
                    {feature.title}
                  </Typography>
                  <Typography variant="body2" color="text.secondary">
                    {feature.description}
                  </Typography>
                </CardContent>
              </Card>
            </Grid>
          ))}
        </Grid>
      </Box>

      {/* Financial Tips */}
      <Box sx={{ mb: 4 }}>
        <Typography variant="h4" gutterBottom fontWeight="bold" sx={{ mb: 3 }}>
          <Lightbulb sx={{ verticalAlign: 'middle', mr: 1 }} />
          {t.tips}
        </Typography>
        <Card>
          <List>
            {tips.map((tip, index) => (
              <React.Fragment key={index}>
                <ListItem>
                  <ListItemIcon>
                    <CheckCircle color="success" />
                  </ListItemIcon>
                  <ListItemText
                    primary={<Typography fontWeight="bold">{tip.title}</Typography>}
                    secondary={tip.description}
                  />
                </ListItem>
                {index < tips.length - 1 && <Divider />}
              </React.Fragment>
            ))}
          </List>
        </Card>
      </Box>

      {/* Support Options */}
      <Box>
        <Typography variant="h4" gutterBottom fontWeight="bold" sx={{ mb: 3 }}>
          <Info sx={{ verticalAlign: 'middle', mr: 1 }} />
          {t.support}
        </Typography>
        <Grid container spacing={3}>
          {supportOptions.map((option, index) => (
            <Grid item xs={12} md={4} key={index}>
              <Card sx={{ height: '100%' }}>
                <CardContent>
                  <Stack direction="row" spacing={2} alignItems="center" sx={{ mb: 2 }}>
                    <Avatar sx={{ bgcolor: 'secondary.main' }}>
                      {option.icon}
                    </Avatar>
                    <Typography variant="h6" fontWeight="bold">
                      {option.title}
                    </Typography>
                  </Stack>
                  <Typography variant="h6" color="primary" gutterBottom>
                    {option.value}
                  </Typography>
                  <Typography variant="body2" color="text.secondary">
                    {option.description}
                  </Typography>
                </CardContent>
              </Card>
            </Grid>
          ))}
        </Grid>
      </Box>

      {/* Government Schemes */}
      <Box sx={{ mt: 4 }}>
        <Alert severity="info" icon={<TrendingUp />}>
          <Typography variant="body1" fontWeight="bold" gutterBottom>
            {language === 'en' ? 'üèõÔ∏è Government Schemes for You' : 'üèõÔ∏è ‡§Ü‡§™‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç'}
          </Typography>
          <Typography variant="body2">
            {language === 'en'
              ? 'Check your eligibility for: Pradhan Mantri Jan Dhan Yojana, Atal Pension Yojana, PM Kisan, MUDRA Loans'
              : '‡§™‡§æ‡§§‡•ç‡§∞‡§§‡§æ ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç: ‡§™‡•ç‡§∞‡§ß‡§æ‡§®‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§ú‡§® ‡§ß‡§® ‡§Ø‡•ã‡§ú‡§®‡§æ, ‡§Ö‡§ü‡§≤ ‡§™‡•á‡§Ç‡§∂‡§® ‡§Ø‡•ã‡§ú‡§®‡§æ, PM ‡§ï‡§ø‡§∏‡§æ‡§®, MUDRA ‡§ã‡§£'}
          </Typography>
        </Alert>
      </Box>
    </Container>
  );
};

export default FinancialInclusion;
